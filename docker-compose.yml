version: '3'
services:
  # API backend container
  api:
    build:
      context: ./docker/php
      args:
        APP_ENV: ${APP_ENV}
        PHP_VERSION: ${PHP_VERSION}
        REMOTE_WORKING_DIR: /api
    restart: unless-stopped
    volumes:
      - ./backend:/api
      - ./configs/php:/usr/local/etc/php/conf.d
    env_file: .env
    ports:
      - 9000:9000
    networks:
      - app-network

  # nginx container
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - ./backend:/api
      - ./frontend:/web
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./configs/nginx/conf.d/:/etc/nginx/conf.d/
      - ./configs/nginx/ssl/:/etc/nginx/ssl/
    ports:
      - 80:80
      - 443:443
    depends_on:
      - api
    networks:
      - app-network

  redis:
    image: "redis:alpine"
    command: redis-server
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/var/lib/redis
      - ./configs/redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - app-network

  db:
    image: mysql:5.7.22
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./data/mysql:/var/lib/mysql
    networks:
      - app-network

# network
networks:
  app-network:
    driver: bridge
